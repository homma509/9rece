# API configure
service: nine-rece-api

frameworkVersion: ">=1.28.0 <2.12.0"

provider:
  name: aws
  stage: ${opt:stage, "dev"}
  region: ${env:REGION_NAME, "ap-northeast-1"}

custom:
  projectName: 9rece-${self:provider.stage}
  appSync:
    name: ${self:custom.projectName}
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      awsRegion: ${self:provider.region}
      userPoolId: ${env:USER_POOL_ID}
      defaultAction: ALLOW # @aws_auth(cognito_groups: ["Admins"])を使用する場合にDENY
    schema: ./mapping-templates/schema.graphql
    dataSources:
      - type: AMAZON_DYNAMODB
        name: ${env:DYNAMO_TABLE_NAME}
        config:
          tableName: ${env:DYNAMO_TABLE_NAME}
          serviceRoleArn: { Fn::GetAtt: [AppSyncRole, Arn] }
          region: ${self:provider.region}
    logConfig:
      loggingRoleArn: { Fn::GetAtt: [AppSyncRole, Arn] }
      level: ALL
      excludeVerboseContent: false
    mappingTemplates:
      - dataSource: ${env:DYNAMO_TABLE_NAME}
        type: Query
        field: getRece
        request: "GetRece.req.vtl"
        response: "GetRece.res.vtl"
      - dataSource: ${env:DYNAMO_TABLE_NAME}
        type: Query
        field: listReces
        request: "ListReces.req.vtl"
        response: "ListReces.res.vtl"

resources:
  Resources:
    # AppSyncのロール:
    AppSyncRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: ${self:custom.projectName}-AppSync
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service: "appsync.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: ${self:custom.projectName}-AppSync
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "dynamodb:DeleteItem"
                    - "dynamodb:GetItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:Query"
                    - "dynamodb:Scan"
                    - "dynamodb:UpdateItem"
                  Resource:
                    - Fn::Join:
                        - ":"
                        - - "arn:aws:dynamodb"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "table/${env:DYNAMO_TABLE_NAME}"
                    - Fn::Join:
                        - ":"
                        - - "arn:aws:dynamodb"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "table/${env:DYNAMO_TABLE_NAME}/*"
                - Effect: "Allow"
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                  Resource:
                    Fn::Join:
                      - ":"
                      - - "arn:aws:logs"
                        - Ref: "AWS::Region"
                        - Ref: "AWS::AccountId"
                        - "log-group:/aws/appsync/*:*:*"

plugins:
  - serverless-dotenv-plugin
  - serverless-appsync-plugin
